mlquantify.methods.aggregative.fm
=================================

.. py:module:: mlquantify.methods.aggregative.fm


Classes
-------

.. autoapisummary::

   mlquantify.methods.aggregative.fm.FM


Module Contents
---------------

.. py:class:: FM(learner: sklearn.base.BaseEstimator)

   Bases: :py:obj:`mlquantify.base.AggregativeQuantifier`


   The Friedman Method. Similar to GPAC, 
   but instead of averaging the confidence scores
   from probabilistic classifiers, it uses the proportion
   of confidence scores that are higher or lower than the
   expected class frequencies found in the training data.


   .. py:attribute:: learner


   .. py:attribute:: CM
      :value: None



   .. py:method:: _fit_method(X, y)

      Abstract fit method that each quantification method must implement.

      Args:
          X (array-like): Training features.
          y (array-like): Training labels.
          learner_fitted (bool): Whether the learner is already fitted.
          cv_folds (int): Number of cross-validation folds.



   .. py:method:: _predict_method(X) -> dict

      Abstract predict method that each quantification method must implement.

      Args:
          X (array-like): Test data to generate class prevalences.

      Returns:
          dict: Dictionary with class:prevalence for each class.



