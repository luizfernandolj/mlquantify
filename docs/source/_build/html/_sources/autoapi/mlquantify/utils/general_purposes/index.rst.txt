mlquantify.utils.general_purposes
=================================

.. py:module:: mlquantify.utils.general_purposes


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/mlquantify/utils/general_purposes/convert_col_to_array/index
   /autoapi/mlquantify/utils/general_purposes/generate_artificial_indexes/index
   /autoapi/mlquantify/utils/general_purposes/get_real_prev/index
   /autoapi/mlquantify/utils/general_purposes/load_quantifier/index
   /autoapi/mlquantify/utils/general_purposes/make_prevs/index
   /autoapi/mlquantify/utils/general_purposes/normalize/index
   /autoapi/mlquantify/utils/general_purposes/parallel/index
   /autoapi/mlquantify/utils/general_purposes/round_protocol_df/index


Functions
---------

.. autoapisummary::

   mlquantify.utils.general_purposes.normalize_prevalence
   mlquantify.utils.general_purposes.parallel
   mlquantify.utils.general_purposes.get_real_prev
   mlquantify.utils.general_purposes.make_prevs
   mlquantify.utils.general_purposes.generate_artificial_indexes
   mlquantify.utils.general_purposes.round_protocol_df
   mlquantify.utils.general_purposes.convert_columns_to_arrays
   mlquantify.utils.general_purposes.load_quantifier


Package Contents
----------------

.. py:function:: normalize_prevalence(prevalences: numpy.ndarray, classes: list)

.. py:function:: parallel(func, elements, n_jobs: int = 1, *args)

.. py:function:: get_real_prev(y) -> dict

.. py:function:: make_prevs(ndim: int) -> list

   Generate a list of n_dim values uniformly distributed between 0 and 1 that sum exactly to 1.

   Args:
   n_dim (int): Number of values in the list.

   Returns:
   list: List of n_dim values that sum to 1.


.. py:function:: generate_artificial_indexes(y, prevalence: list, sample_size: int, classes: list)

.. py:function:: round_protocol_df(dataframe: pandas.DataFrame, frac: int = 3)

.. py:function:: convert_columns_to_arrays(df, columns: list = ['PRED_PREVS', 'REAL_PREVS'])

   Converts the specified columns from string of arrays to numpy arrays

   Args:
       df (array-like): the dataframe from which to change convert the coluns
       columns (list, optional): the coluns with string of arrays, default is the options for
       the protocol dataframes


.. py:function:: load_quantifier(path: str)

